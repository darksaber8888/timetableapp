trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Step 1: Create working directory and change directory
      mkdir timetable
      cd timetable

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_darksaber8888'
    repositoryName: 'darksaber8888/timtableapp'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    tagPattern: 'v1'
    title: 'latest'
    isDraft: true
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'

# Step 3: Download dependencies
- script: |
    sudo apt-get update
    sudo apt-get install -y python3 python3-pip
    pip3 install flask tabulate
    sudo apt-get install -y docker.io
  displayName: 'Install dependencies'

# Step 4: Build Docker image
- script: |
    docker build -t timetable.app .
  displayName: 'Build Docker image'

- task: SnykSecurityScan@1
  inputs:
    serviceConnectionEndpoint: 'snyk_sc'
    testType: 'container'
    dockerImageName: 'timetable.app'
    dockerfilePath: '*/Dockerfile'
    severityThreshold: 'critical'
    monitorWhen: 'always'
    failOnIssues: true
    projectName: 'darksaber8888/timetable.app'
    organization: '78dbe9ea-e211-46bd-8621-0e14db09a67c'

# Step 6: Run container image scan
- script: |
    snyk test timetable.app --json > results.json
  displayName: 'Run container image scan'

# Step 7: Create and write results to file
- script: |
    cat results.json > results.txt
  displayName: 'Write scan results to file'


